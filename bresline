#include<stdio.h>
#include<GL/gl.h>
#include<GL/glut.h>

#define sign(x)((x>0)?1:(x<0)?-1:0);

void setPixel(GLint x, GLint y)
{
	glBegin(GL_POINTS);
	glVertex2i(x,y);
	glEnd();
}

void bres_general(int x1,int y1,int x2,int y2)
{
	int dx,dy,x,y,d,s1,s2,steps;//swap=0,temp;
	
	dx=abs(x2-x1);
	dy=abs(y2-y1);
	s1=sign(x2-x1);
	s2=sign(y2-y1);

	/*if(dy>dx)
	{
		temp=dx;
		dx=dy;
		dy=temp;
		swap=1;
	}*/

	if(dx>dy)
	{
		steps=dx;
	}
	else
	{
		steps=dy;
	}
        

	d = 2*dy-dx;
	x=x1;
	y=y1;

	
	
	int i;
	for(i=1;i<=steps;i++)
	{
		setPixel(x,y);
		if(d>=0)
		{
			y=y+s2;
			d=d-2*dx;
			x=x+s1;
		        d=d+2*dy;
		}
		else
		{
		x=x+s1;
		d=d+2*dy;
		}
		//setPixel(x,y);
	}
	
	glFlush();
}


void draw(void)
{
	glClear(GL_COLOR_BUFFER_BIT);

	bres_general(20,40,620,40);
	bres_general(620,40,620,440);
	bres_general(620,440,20,440);
	bres_general(20,440,20,40);

	bres_general(320,440,20,240);
	bres_general(20,240,320,40);
	bres_general(320,40,620,240);
	bres_general(620,240,320,440);	

	bres_general(170,340,170,140);
	bres_general(170,140,470,140);
	bres_general(470,140,470,340);
	bres_general(470,340,170,340);	


		

	glFlush();
}

void init()
{
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(0,0);
	glutInitWindowSize(0,0);
	glutCreateWindow("Green Window");
	glClearColor(0.0,0.0,0.0,0);
	glColor3f(1.0,1.0,1.0);
	gluOrtho2D(0,640,0,480);
}

int main(int argc , char **argv)
{
	glutInit(&argc , argv);
	init();
	glutDisplayFunc(draw);
	glutMainLoop();
	return 0;
}
			
